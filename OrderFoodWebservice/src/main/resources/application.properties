spring.datasource.url=jdbc:mysql://localhost:3306/orderfood?useSSL=false&createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

# Username and password
spring.datasource.username=root
spring.datasource.password=
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
### Firebase config
app.firebase-configuration-file=/orderfood-e582c-firebase-adminsdk-3dli3-f28f0f457c.json
app.notifications.defaults={topic: 'common', title: 'Common topic - Hello', message: 'Sending test message \uD83D\uDE42', token: 'fcjiFdDWSquevI0w48ciMK:APA91bFE2FqquzdRUVdfgseCbox6qeDn_ffv9whiAzhEjMOG2MxRIgbpIG6po9Y-1DfxFwoer9XDC4PesTwrxuofwWylHywv7-8qgV8YCJuY0Ur7cdJ3BAw2P8L2JBCIITF9YzXIZchT', payloadMessageId: '123', payloadData: 'Hello. This is payload content.'}
### MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=${path.separator}uploads